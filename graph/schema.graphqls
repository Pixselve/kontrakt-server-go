# GraphQL schema example
#
# https://gqlgen.com/getting-started/

directive @hasRole(role: Role!) on FIELD_DEFINITION
directive @goField(forceResolver: Boolean, name: String) on INPUT_FIELD_DEFINITION
    | FIELD_DEFINITION

type Contract {
    archived :Boolean! @hasRole(role: TEACHER)
    end      :String!
    id       :Int!
    name     :String!
    hexColor :String!
    start    :String!
    skills   :[Skill!]! @goField(forceResolver: true)
    groups   :[Group!]!
}

type Group {
    id        :Int!
    name      :String!
    contracts :[Contract!]!
    students  :[Student!]!
}

type Skill {
    contractId    :Int!
    id            :Int!
    name          :String!
    contract      :Contract!
    studentSkills :[StudentSkill!]!
}

type StudentSkill {
    skillID   :Int!
    studentID :String!
    mark      :Mark!
    skill     :Skill!
    student   :Student!

}

type Student {
    owner        : User!
    ownerID       :String!
    firstName     :String!
    lastName     : String!
    studentSkills :[StudentSkill!]!
    groups        :[Group!]!
}

type Teacher {
    owner     : User!
    ownerID   : String!
    firstName : String!
    lastName  : String!
}

type User {
    username :String!
    password :String!
    role     :Role!
    Student  :[Student!]!
    Teacher  :[Teacher!]!
}

enum Role {
    TEACHER
    STUDENT
    ADMIN
}

enum Mark {
    TODO
    GOOD
    BAD
}

type Query {
    contracts: [Contract!]!
}